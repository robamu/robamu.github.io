<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Raspberrypi on hi, I am robin</title><link>https://robamu.github.io/tags/raspberrypi/</link><description>Recent content in Raspberrypi on hi, I am robin</description><generator>Hugo -- 0.145.0</generator><language>en-us</language><lastBuildDate>Wed, 27 Dec 2023 21:18:03 +0100</lastBuildDate><atom:link href="https://robamu.github.io/tags/raspberrypi/index.xml" rel="self" type="application/rss+xml"/><item><title>Cross-Compile and Debug Rust Applications for the Raspberry Pi</title><link>https://robamu.github.io/blog/cross-compile-rust-rpi/</link><pubDate>Mon, 27 Dec 2021 12:31:51 +0100</pubDate><guid>https://robamu.github.io/blog/cross-compile-rust-rpi/</guid><description>&lt;p>After exploring Rust for smaller bare-metal systems like Cortex-M based microcontrollers, I am
trying to learn using Rust when using a Linux runtime. The most common example for this is the
&lt;a href="https://www.raspberrypi.org/">Raspberry Pi&lt;/a>, but there are a lot of other boards out there
which support Embedded Linux, for example the &lt;a href="https://beagleboard.org/black">Beagle Bone Black&lt;/a> or
Xilinx hybrid CPU / FPGA solutions like the
&lt;a href="https://www.xilinx.com/products/silicon-devices/soc/zynq-7000.html">Zynq 7020&lt;/a>.&lt;/p>
&lt;center>
&lt;figure>
&lt;img loading="lazy" src="https://robamu.github.io/img/rpi-rs-crosscompile/RPI.jpg"
alt="Embedded Linux Boards: Raspberry Pi"/> &lt;figcaption>
&lt;p>Embedded Linux Boards: Raspberry Pi&lt;/p></description></item></channel></rss>